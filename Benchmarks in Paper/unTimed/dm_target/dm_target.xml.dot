digraph finite_state_machine {
	node [shape = point ]; qi0;
	node [shape = doublecircle];6;
	node [shape=circle];
	qi0 -> 14;
	1 -> 8 [ label = "{(return kfree)}" ];
	2 -> 1 [ label = "{(free item),pop stack 1,0<=ag(1)<=inf}" ];
	12 -> 2 [ label = "{(call kfree)}" ];
	9 -> 12 [ label = "{(add to list)}" ];
	3 -> 7 [ label = "{(return free),pop stack 2,0<=ag(1)<=inf}" ];
	4 -> 3 [ label = "{(check bad free),pop stack 1,0<=ag(2)<=inf}" ];
	5 -> 4 [ label = "{(call free again),push 1 stack 2}" ];
	8 -> 5 [ label = "{(check flag)}" ];
	10 -> 12 [ label = "{(found),pop stack 2,0<=ag(1)<=inf}" ];
	7 -> 6 [ label = "{(return register),pop stack 2,0<=ag(2)<=inf}" ];
	10 -> 9 [ label = "{(not found),pop stack 2,0<=ag(1)<=inf}" ];
	11 -> 10 [ label = "{(call find),push 1 stack 2}" ];
	12 -> 11 [ label = "{(allocation),push 1 stack 1}" ];
	13 -> 12 [ label = "{(2),push 2 stack 1}" ];
	14 -> 13 [ label = "{(call register),push 2 stack 2}" ];
}